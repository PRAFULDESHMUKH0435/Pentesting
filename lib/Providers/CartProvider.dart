import 'package:flutter/foundation.dart';
import 'package:hive/hive.dart';
import 'package:pentesting/Models/CartModel.dart';
class CartProvider with ChangeNotifier{

  static var cartbox = Hive.box("CartItemsBox");
  int _cartQuantity =cartbox.values.toList().length;

  set cartQuantity(int value) {
    _cartQuantity = value;
  }

  int get cartQuantity => _cartQuantity;

  List cartitemslist=[];
  double totalamount =0.0;
  var orderhistorylist=[];



  GetCartCount() async{
    _cartQuantity = await cartbox.toMap().values.length;
    print("CartQuantity Is ${_cartQuantity}");
    return _cartQuantity;
  }

  GetCartItemsList(){
    var cartitemslist = cartbox.toMap().values.toList();
    print("Total Amount Is ${totalamount}");
    return cartitemslist;
  }


  GetOrderHistoryList() async{
    var box =await Hive.openBox("OrdersHistoryBox");
    orderhistorylist =  box.toMap().values.toList();
    print("Order History List  Is ${orderhistorylist}");
  }

  ClearCartItemsPro()async{
    var mybox =await Hive.openBox("CartItemsBox");
    var cartitemslist = mybox.toMap().values.toList();
    mybox.clear();
    cartitemslist.clear();
    _cartQuantity=0;
    cartQuantity=0;
    cartitemslist.clear();
    cartbox.clear();
    print("Cart Items Are Cleared");
    notifyListeners();
  }

  IncrementCount() async{
    _cartQuantity  = await cartbox.toMap().values.toList().length;
    // _cartQuantity++;
    notifyListeners();
  }

  DecrementCount() async{
    _cartQuantity  = await cartbox.toMap().values.toList().length;
    // _cartQuantity--;
    notifyListeners();
  }

  AddItemToCart(CartModel cartModel){
    cartitemslist = cartbox.toMap().values.toList();
    print("Initial CartItems List From CartBox IS ${cartitemslist}");
    cartbox.add(cartModel);
    cartitemslist = cartbox.toMap().values.toList();
    print("Final CartItems List From CartBox IS ${cartitemslist}");
    GetCartCount();
  }


  DeleteItemModelFromBox(int index){
    cartitemslist = cartbox.toMap().values.toList();
    print("CartList Before Deleting Is ${cartitemslist}");
    print("CartItemsList Length Before Deleting Is ${cartitemslist.length}");

    if(index<cartitemslist.length){
      cartbox.deleteAt(index);
      cartitemslist.removeAt(index);
      _cartQuantity-=1;
    }else{
      print("Error In Deleting Item At Index ${index}");
    }
    print("Updated List After Deleting Is ${cartitemslist}");
    notifyListeners();
  }
}