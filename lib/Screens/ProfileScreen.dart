import 'package:firebase_database/firebase_database.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:hive/hive.dart';
import 'package:image_picker/image_picker.dart';
import 'package:pentesting/CommonHelper/BusinessLogic.dart';
import 'package:pentesting/Providers/ProfileProvider.dart';
import 'dart:io';

import 'package:provider/provider.dart';

class ProfileScreen extends StatefulWidget {
   ProfileScreen({super.key});

  @override
  State<ProfileScreen> createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen> {



  @override
  void initState() {
    // TODO: implement initState
    GetUserDataFromHiveDataBase();
    super.initState();
  }
  BusinessLogic bl = BusinessLogic();

  File? _photo;
  File? _file;
  String _filePath = '';
  bool _uploading = false;
  double _uploadProgress = 0.0;
  final databaseReference = FirebaseDatabase.instance.reference();
  String name ="";
  String email ="";
  String phone ="";
  String address ="";
  String password ="";


  TextEditingController usernamecontroller = TextEditingController();

  TextEditingController useremailcontroller = TextEditingController();

  TextEditingController userphonecontroller = TextEditingController();

  TextEditingController useraddresscontroller = TextEditingController();

  TextEditingController userpasswordcontroller = TextEditingController();

  @override
  Widget build(BuildContext context) {
    GetUserDataFromHiveDataBase();
    final profileprovider = Provider.of<ProfileProvider>(context);
    var userbox = Hive.box("UserDataBox");
    profileprovider.FillData(name,email,phone,address,password);
    // TODO: implement build
    return Scaffold(
      appBar: AppBar(
        title: Text("Profile"),
      ),

      body: Column(
        children: [
          Text(userbox.values.toList()[0].username),
          Text(userbox.values.toList()[0].useremail),
          Text(userbox.values.toList()[0].userphone),

        ],
      ),
    );

  }



  // Future<List> GetUserDataFromHiveDataBase() async{
  //   var box =await Hive.openBox("UserDataBox");
  //   List userdatalist =await box.values.toList();
  //   print(" Profile Screen User Data Is :");
  //   await box.values.map((e){
  //     bl.username=e.username;
  //     name=e.username;
  //     email=e.useremail;
  //     phone=e.userphone;
  //     address=e.useraddress;
  //     password=e.userpassword;
  //
  //     print("UserName :${e.username}");
  //     print("UserEmail :${e.useremail}");
  //     print("UserPhone :${e.userphone}");
  //     print("UserAddress :${e.useraddress}");
  //     print("UserPassword :${e.userpassword}");
  //   }).toList();
  //      //
  //      // usernamecontroller.text=userdatalist[0].username;
  //      // useremailcontroller.text=userdatalist[0].useremail;
  //      // userphonecontroller.text=userdatalist[0].userphone;
  //      // useraddresscontroller.text=userdatalist[0].useraddress;
  //      // userpasswordcontroller.text=userdatalist[0].userpassword;
  //      //
  //   print(" Profile Screen UserData List Is  ${userdatalist}");
  //
  //   return userdatalist;
  // }




   GetUserDataFromHiveDataBase() async{
    var box =await Hive.openBox("UserDataBox");
    List userdatalist =await box.values.toList();
    print(" Profile Screen User Data Is :");
    await box.values.map((e){
      bl.username=e.username;
      name=e.username;
      email=e.useremail;
      phone=e.userphone;
      address=e.useraddress;
      password=e.userpassword;

      print("UserName :${e.username}");
      print("UserEmail :${e.useremail}");
      print("UserPhone :${e.userphone}");
      print("UserAddress :${e.useraddress}");
      print("UserPassword :${e.userpassword}");
    }).toList();
    //
    // usernamecontroller.text=userdatalist[0].username;
    // useremailcontroller.text=userdatalist[0].useremail;
    // userphonecontroller.text=userdatalist[0].userphone;
    // useraddresscontroller.text=userdatalist[0].useraddress;
    // userpasswordcontroller.text=userdatalist[0].userpassword;
    //
    print(" Profile Screen UserData List Is  ${userdatalist}");

    return userdatalist;
  }

  // ReUsableTextField(mycontroller) {
  //   return Container(
  //     margin: EdgeInsets.symmetric(horizontal: 8.0,vertical: 5.0),
  //     child: TextField(
  //         decoration: InputDecoration(
  //           enabledBorder: OutlineInputBorder(
  //               borderRadius: BorderRadius.circular(14.0)
  //           ),
  //         ),controller: mycontroller),
  //   );
  // }


  ReUsableTextField(text,icondata){
    return ListTile(
      title: Text(text),
      leading: Icon(icondata),
    );
  }

}
