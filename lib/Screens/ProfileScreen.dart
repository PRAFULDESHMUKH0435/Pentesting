import 'package:flutter/material.dart';
class ProfilePage extends StatefulWidget {
  @override
  _ProfilePageState createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Profile"),
      ),
      body: Center(
        child: ListView(
          children: <Widget>[
            CircleAvatar(
              radius: 60,
              backgroundImage:NetworkImage('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkQNstTrRmsutZfduCqOBbr9QMPsLbKHVT5K-tQ_nf4w&s'),
              child: Stack(
                children: <Widget>[
                  Positioned(
                    bottom: 3,
                    right: 140.5,
                    child: IconButton(
                      icon: Icon(Icons.edit),
                      onPressed: () {
                        // Add logic to handle image upload
                      },
                    ),
                  ),
                ],
              ),
            ),
            SizedBox(height: 20),
            ProfileTextField(label: 'Username', initialValue: 'JohnDoe'),
            ProfileTextField(label: 'Phone Number', initialValue: '+1234567890'),
            ProfileTextField(label: 'Email', initialValue: 'johndoe@example.com'),
            ProfileTextField(label: 'Password', initialValue: '********', obscureText: true),
            ProfileTextField(label: 'Address', initialValue: '123 Main St'),
          ],
        ),
      ),
    );
  }
}

class ProfileTextField extends StatelessWidget {
  final String label;
  final String initialValue;
  final bool obscureText;

  const ProfileTextField({
    Key? key,
    required this.label,
    required this.initialValue,
    this.obscureText = false,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
      child: TextField(
        decoration: InputDecoration(
          labelText: label,
          border: OutlineInputBorder(),
        ),
        controller: TextEditingController(text: initialValue),
        obscureText: obscureText,
      ),
    );
  }
}
