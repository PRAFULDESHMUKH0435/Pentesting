import 'package:flutter/material.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:image_picker/image_picker.dart';
import 'package:pentesting/CommonHelper/BusinessLogic.dart';
import 'dart:io';

class ProfileScreen extends StatefulWidget {
   ProfileScreen({super.key});

  @override
  State<ProfileScreen> createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen> {
  BusinessLogic bl = BusinessLogic();

  File? _photo;
  final ImagePicker _picker = ImagePicker();



  TextEditingController usernamecontroller = TextEditingController();

  TextEditingController useremailcontroller = TextEditingController();

  TextEditingController userphonecontroller = TextEditingController();

  TextEditingController useraddresscontroller = TextEditingController();

  TextEditingController userpasswordcontroller = TextEditingController();

  @override
  Widget build(BuildContext context) {
    print("List From Business Layer Is ${bl.userdatalist}");
    return Scaffold(
      appBar: AppBar(
        title: Text("Profile"),
        actions: [
          IconButton(onPressed: (){
          }, icon: Icon(Icons.edit))
        ],
      ),
      body: Center(
        child: FutureBuilder(
            future: bl.GetUserData(),
            builder: (context,snapshot){
              if(snapshot.connectionState==ConnectionState.waiting){
                return Center(child: SpinKitHourGlass(color: Colors.white));
              }
              else{
                return ListView(
                  children: [
                    SizedBox(height: 20,),
                    InkWell(
                        onTap: (){
                        },
                        child: CircleAvatar(
                          radius: 80,
                        )),
                    ReUsableListTile(bl.username,Icons.person_outline),
                    ReUsableListTile(bl.useremail,Icons.email_outlined),
                    ReUsableListTile(bl.userphone,Icons.phone_outlined),
                    ReUsableListTile(bl.useraddress,Icons.location_city_outlined),
                    ReUsableListTile(bl.userpassword,Icons.password),
                  ],
                );
              }
            })
      ),
    );
  }

  ReUsableListTile(String title,IconData icon) {
    return ListTile(
      title: Text(title),
      leading: Icon(icon),
    );
  }

  // void opendialog() {
  //    usernamecontroller.text=userdatalist[0].username;
  //    useremailcontroller.text=userdatalist[0].useremail;
  //    userphonecontroller.text=userdatalist[0].userphone;
  //    useraddresscontroller.text=userdatalist[0].useraddress;
  //    userpasswordcontroller.text=userdatalist[0].userpassword;
  //
  //    showDialog(context: context,
  //        builder: (context){
  //     return AlertDialog(
  //       title: Text("Update"),
  //       content: Column(
  //         mainAxisSize: MainAxisSize.min,
  //         children: [
  //           CircleAvatar(
  //             radius: 60,
  //           ),
  //           SizedBox(height: 8,),
  //           ReUsableTextField(usernamecontroller),
  //           ReUsableTextField(useremailcontroller),
  //           ReUsableTextField(userphonecontroller),
  //           ReUsableTextField(useraddresscontroller),
  //           ReUsableTextField(userpasswordcontroller),
  //         ],
  //       ),
  //       actions: [
  //         OutlinedButton(onPressed: (){
  //           // UpdateUserRegistartionData();
  //         }, child: Text("Update")),
  //         OutlinedButton(onPressed: ()=>Navigator.of(context).pop(), child: Text("Cancel")),
  //       ],
  //     );
  //   });
  // }



  ReUsableTextField(mycontroller) {
    return Container(
      margin: EdgeInsets.symmetric(horizontal: 8.0,vertical: 5.0),
      child: TextField(
        decoration: InputDecoration(
        enabledBorder: OutlineInputBorder(
            borderRadius: BorderRadius.circular(14.0)
        ),
      ),controller: mycontroller),
    );
  }



}
