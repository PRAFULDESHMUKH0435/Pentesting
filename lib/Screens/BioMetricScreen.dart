import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:local_auth/local_auth.dart';
import 'package:lottie/lottie.dart';

import 'SplashScreen.dart';


class BiometricScreen extends StatefulWidget {
  @override
  _BiometricScreenState createState() => _BiometricScreenState();
}

class _BiometricScreenState extends State<BiometricScreen> {
  final LocalAuthentication auth = LocalAuthentication();
  bool _authenticated = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Lottie.asset(
              'Assets/Animations/fingerprint.json',
              height: 200,
              width: 200,
              fit: BoxFit.fill,
            ),
            SizedBox(height: 20),
            Text(
              'Scan with Fingerprint or Face',
              style: TextStyle(fontSize: 24, color: Colors.white),
            ),
            SizedBox(height: 40),
            ElevatedButton(
              onPressed: () async {
                // bool authenticated = await _authenticate();
                // setState(() {
                //   _authenticated = authenticated;
                // });
                CheckAuth();
              },
              child: Padding(
                padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
                child: Text(
                  'Authenticate',
                  style: TextStyle(fontSize: 20,color: Colors.brown.shade900),
                ),
              ),
            ),
            SizedBox(height: 20),
            Visibility(
              visible: _authenticated,
              child: Text(
                'Authenticated',
                style: TextStyle(fontSize: 20, color: Colors.white),
              ),
            ),
          ],
        ),
      ),
    );
  }





  CheckAuth() async{
    bool isAvailable;
    isAvailable = await auth.canCheckBiometrics;
    print("Available Biometrics Are ${auth.getAvailableBiometrics()}");

    if(isAvailable){
      bool result = await auth.authenticate(
          localizedReason: 'Scan With Available Biometrics ');
      if(result){
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Authenticated")));
        // Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>SplashScreen()));
        print(result);
      }else{
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Permission Denied")));
        print("Permission Denied");
      }
    }else{
      print("No Sensor Detected");
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("No Biometrics Sensor Detected")));
    }
  }
}
