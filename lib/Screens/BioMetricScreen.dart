import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:local_auth/local_auth.dart';
import 'package:lottie/lottie.dart';
import 'package:pentesting/Screens/SplashScreen.dart';
class BioMetricScreen extends StatefulWidget {
  const BioMetricScreen({super.key});

  @override
  State<BioMetricScreen> createState() => _BioMetricScreenState();
}

class _BioMetricScreenState extends State<BioMetricScreen> {
  final LocalAuthentication auth = LocalAuthentication();


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white70,
      body: Container(
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                height: 200,
                width: 200,
                child: Lottie.asset('Assets/Animations/fingerprint.json')
              ),
              Text("Scan Using Face ID Or FingerPrint",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
              Padding(
                padding: EdgeInsets.only(top: 8.0),
                child: OutlinedButton(onPressed: (){
                  CheckAuth();
                }, child: Text("Authenticate",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),)),
              )
            ],
          ),
        ),
      ),
    );
  }


  CheckAuth() async{
    bool isAvailable;
    isAvailable = await auth.canCheckBiometrics;
    print("Available Biometrics Are ${auth.getAvailableBiometrics()}");

    if(isAvailable){
      bool result = await auth.authenticate(
          localizedReason: 'Scan With Available Biometrics ');
      if(result){
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Authenticated")));
        Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>SplashScreen()));
        print(result);
      }else{
        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Permission Denied")));
        print("Permission Denied");
      }
    }else{
      print("No Sensor Detected");
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("No Biometrics Sensor Detected")));
    }
  }
}

