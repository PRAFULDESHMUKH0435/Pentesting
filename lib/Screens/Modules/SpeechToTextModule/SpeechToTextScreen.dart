import 'package:flutter/material.dart';
import 'package:speech_to_text/speech_to_text.dart';
class SpeechToTextScreen extends StatefulWidget {
  const SpeechToTextScreen({super.key});

  @override
  State<SpeechToTextScreen> createState() => _SpeechToTextScreenState();
}

class _SpeechToTextScreenState extends State<SpeechToTextScreen> {

  var textSpeech = "CLICK ON MIC TO RECORD";
  SpeechToText speechToText = SpeechToText();
  var isListening = false;
  void checkMic() async{
    bool micAvailable = await speechToText.initialize();
    if(micAvailable){
      print("MicroPhone Available");
    }else{
      print("User Denied th use of speech micro");
    }
  }


  @override
  void initState() {
    // TODO: implement initState
    checkMic();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black.withOpacity(0.5),
      body: Center(
        child: SingleChildScrollView(
          child: Column(
            children: [
              Text(textSpeech,style: TextStyle(color: Colors.white,fontWeight: FontWeight.bold),),
              SizedBox(height: 20,),
              GestureDetector(
                onTap: () async{
                  if(!isListening){
                    bool micAvailable = await speechToText.initialize();
                    if(micAvailable){
                      setState(() {
                        isListening = true;
                      });
                      speechToText.listen(
                          listenFor: Duration(seconds: 20),
                          onResult: (result){
                            setState(() {
                              textSpeech = result.recognizedWords;
                              isListening = false;
                            });
                          }
                      );
                    }
                  }else{
                    setState(() {
                      isListening = false;
                      speechToText.stop();
                    });
                  }
                },
                child: CircleAvatar(
                  child: isListening ? Icon(Icons.headset_mic_outlined): Icon(Icons.mic),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}

