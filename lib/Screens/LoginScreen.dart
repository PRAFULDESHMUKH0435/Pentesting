import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:hive/hive.dart';
import 'package:pentesting/Screens/ForgotPasswordScreen.dart';
import 'package:pentesting/Screens/HomeScreen.dart';
import 'package:pentesting/Screens/RegistrationScreen.dart';
import 'package:shared_preferences/shared_preferences.dart';
class LoginScreen extends StatefulWidget {
   LoginScreen({super.key});

  @override
  State<LoginScreen> createState() => _LoginScreenState();

}

class _LoginScreenState extends State<LoginScreen> {
  bool isobsecured = true;
  final usernamecontroller  = TextEditingController();
  final userpasswordcontroller  = TextEditingController();
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _scaffoldKey,
      body: ListView(
        children: [
          SizedBox(height: 80,),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 8.0,vertical: 25.0),
            child: TextFormField(
              keyboardType: TextInputType.emailAddress,
              autovalidateMode: AutovalidateMode.onUserInteraction,
              controller: usernamecontroller,
              decoration:const InputDecoration(
                  suffixIcon: Icon(Icons.person_outline),
                  enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(14.0)),
                      borderSide: BorderSide(color: Colors.white70)
                  ),
                  focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(14.0)),
                      borderSide: BorderSide(color: Colors.green)
                  ),
                  label: Text("UserName",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold)),
                  hintText: "Enter UserName",
                  filled: true,
                  fillColor: Colors.grey
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 8.0,vertical: 5.0),
            child: TextFormField(
              keyboardType: TextInputType.visiblePassword,
              obscureText: isobsecured,
              autovalidateMode: AutovalidateMode.onUserInteraction,
              controller: userpasswordcontroller,
              decoration: InputDecoration(
                  suffixIcon: IconButton(icon:isobsecured?Icon(Icons.visibility_off_outlined):Icon(Icons.remove_red_eye),onPressed: (){
                    setState(() {
                      isobsecured=!isobsecured;
                    });
                  }),
                  enabledBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(14.0)),
                      borderSide: BorderSide(color: Colors.white70)
                  ),
                  focusedBorder: OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(14.0)),
                      borderSide: BorderSide(color: Colors.green)
                  ),
                  label: Text("Password",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),),
                  hintText: "Enter Password",
                  filled: true,
                  fillColor: Colors.grey
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 15.0,vertical: 5.0),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                InkWell(
                    onTap:(){
                      Navigator.push(context, MaterialPageRoute(builder: (context)=>ForgotPasswordScreen()));
                    },
                    child: Text("Forgot Password?",style: TextStyle(fontSize: 15,fontWeight: FontWeight.bold),))
              ],),
          ),
          InkWell(
            onTap: () async{
              if(usernamecontroller.text.toString().length>=15 || userpasswordcontroller.text.toString().length>=15){
                Navigator.pop(context);
              }
              if(usernamecontroller.text.toString().trim().isEmpty || userpasswordcontroller.text.toString().trim().isEmpty){
                ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Both Fields Are Required")));
              }else{
                var box =await Hive.openBox("UserDataBox");
                print("Is Box Empty :${box.isEmpty}");

                if((usernamecontroller.text.toString().trim()=="test"  && userpasswordcontroller.text.toString().trim()=="test")){
                  SharedPreferences sp = await SharedPreferences.getInstance();
                  sp.setBool("Is_TestUser", true);
                  Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (context)=>HomeScreen()), (route) => false);
                  return;
                }

                // if((usernamecontroller.text.toString().trim().isNotEmpty  && userpasswordcontroller.text.toString().trim().isNotEmpty)){
                //   final auth = await FirebaseAuth.instance.signInWithEmailAndPassword(
                //       email: usernamecontroller.text.toString().trim(),
                //       password: userpasswordcontroller.text.toString().trim()).then((value){
                //         print("Login Success");
                //         ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Login Success")));
                //         Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (context)=>HomeScreen()), (route) => false);
                //      }).onError((error, stackTrace){
                //        print("Login Failed ${error.toString()}");
                //        ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Login Failed , Invalid Username Or Password")));
                //     });
                // }


                if(box.isNotEmpty){
                  Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>HomeScreen()));
                }else{
                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text("Invalid Username Or Password")));
                }
              }

            },
            child: Container(
              margin: EdgeInsets.symmetric(vertical: 5.0,horizontal: 60),
              child: Center(child: Text("Login",style: TextStyle(fontSize: 25,fontWeight: FontWeight.bold),)),
              height: 60,
              width: 150,
              decoration: BoxDecoration(
                  color: Colors.greenAccent,
                  borderRadius: BorderRadius.all(Radius.circular(14.0))
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.symmetric(horizontal: 10.0,vertical: 5.0),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                Text("Don't Have An Account",style: TextStyle(fontSize: 16),),
                InkWell(
                    onTap: (){
                      Navigator.push(context, MaterialPageRoute(builder: (context)=>RegistrationScreen()));
                    },
                    child: Text("Create One",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold)))
              ],
            ),
          ),
        ],
      ),
    );
  }
}



