import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:hive/hive.dart';
import 'package:pentesting/CommonHelper/BusinessLogic.dart';
import 'package:pentesting/Screens/Modules/ChatModule/ChatModule.dart';
import 'package:pentesting/Screens/LoginScreen.dart';
import 'package:pentesting/Screens/OrderHistoryScreen.dart';
import 'package:pentesting/Screens/ProfileScreen.dart';
import 'package:pentesting/Screens/Modules/SpeechToTextModule/SpeechToTextScreen.dart';
import '../Screens/Modules/UploadFileModule/UploadFileScreen.dart';


class MyDrawer extends StatefulWidget {
  MyDrawer({super.key});

  @override
  State<MyDrawer> createState() => _MyDrawerState();
}

class _MyDrawerState extends State<MyDrawer> {
  BusinessLogic bl = BusinessLogic();
  String username="testuser";
  bool testuser = false;


  @override
  void initState() {
    // TODO: implement initState
    GetUserName();();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    FirebaseAuth.instance.currentUser==null?testuser=true:false;

    return Drawer(
      child: SingleChildScrollView(
        scrollDirection: Axis.vertical,
        child: Column(
          children: [
            testuser ?
                 DrawerHeader(child: Row(
        children: [
            Expanded(
            flex:1,
            child:   CircleAvatar(
              radius: 50,
              backgroundImage: NetworkImage('https://cdn.pixabay.com/photo/2018/08/28/12/41/avatar-3637425_640.png'),
            )),
                     SizedBox(width: 8,),
                     Expanded(
          flex: 2,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text("Welcome Back",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),),
              Text("testuser",style: TextStyle(fontSize: 16,fontWeight: FontWeight.bold),)
            ],
          ),
        )
        ],
        ))
            :
                 DrawerHeader(child: Row(
                    children: [
                    Expanded(
                        flex:1,
                        child:Expanded(
                          child: StreamBuilder(
                              stream: FirebaseFirestore.instance.collection('Users').doc(FirebaseAuth.instance.currentUser!.uid).snapshots(),
                              builder: (context, snapshot) {
                                if (!snapshot.hasData || snapshot.data == null) {
                                  return Center(
                                      child: Center(child: CircularProgressIndicator())); // Display a loading indicator while data is loading
                                }
                                // Assuming you have a field named 'profile_image' in your Firestore document
                                String? imageUrl = snapshot.data!.get('userimage');

                                if (imageUrl == null || imageUrl.isEmpty) {
                                  return CircleAvatar(
                                    child: Image.network("https://cdn.pixabay.com/photo/2018/08/28/12/41/avatar-3637425_640.png"),
                                    radius: 50,
                                  ); // Display a default avatar if the image URL is not available
                                };

                                return Center(
                                  child: Stack(
                                    children: [
                                      CircleAvatar(
                                        maxRadius: 60,
                                        backgroundImage: NetworkImage(imageUrl),
                                      ),
                                    ],
                                  ),
                                );
                              }),
                        ),
                    ),
                    SizedBox(width: 8,),
                    Expanded(
                      flex: 2,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text("Welcome Back",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold),),
                          Text(username,style: TextStyle(fontSize: 16,fontWeight: FontWeight.bold),)
                        ],
                      ),
                    )
              ],
            )),
            Column(
              children: [
                ListTile(
                  title: Text("Home",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.home_outlined),
                  onTap: (){
                    Navigator.pop(context);
                  },
                ),
                ListTile(
                  title: Text("Profile",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.person_outline),
                  onTap: (){
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>ProfileScreen()));
                  },
                ),
                ListTile(
                  title: Text("My Orders",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.shopping_cart_outlined),
                  onTap: (){
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>OrderHistoryScreen()));
                  },
                ),
                ListTile(
                  title: Text("Upload Attachments",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.attachment_rounded),
                  onTap: (){
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>UploadFileScreen()));
                  },
                ),
                ListTile(
                  title: Text("Gemini AI",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.chat_outlined),
                  onTap: (){
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>ChatScreen()));
                  },
                ),
                ListTile(
                  title: Text("Speech To Text",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.record_voice_over_outlined),
                  onTap: (){
                    Navigator.push(context, MaterialPageRoute(builder: (context)=>SpeechToTextScreen()));
                  },
                ),
                ListTile(
                  title: Text("Sign Out",style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                  leading: Icon(Icons.logout_outlined),
                  onTap: (){
                    Navigator.of(context).pop(true);
                    showDialog(context: context, builder: (context){
                      return AlertDialog(
                        title: Text("Exit ?"),
                        content: Text("Are You Sure You Want To Exit ?"),
                        actions: [
                          OutlinedButton(onPressed: (){
                            Navigator.pop(context);
                          }, child: Text("No")),
                          OutlinedButton(onPressed: (){
                            var box = Hive.box("UserDataBox");
                            box.clear();
                            Navigator.pushAndRemoveUntil(context, MaterialPageRoute(builder: (context)=>LoginScreen()), (route) => false);
                          }, child: Text("Yes")),
                        ],
                      );
                    });
                  },
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }


  GetUserName() async{
    String? uid = await FirebaseAuth.instance.currentUser?.uid;
    final ref = await FirebaseFirestore.instance.collection("Users").doc(uid).get();
    setState(() {
      username=ref.get("username");
    });
  }

}
