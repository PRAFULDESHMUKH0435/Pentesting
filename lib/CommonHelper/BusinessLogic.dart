import 'dart:convert';
import 'package:flutter/services.dart';
import 'package:hive/hive.dart';
import 'package:pentesting/Models/UserRegistrationModel.dart';
import 'package:pentesting/Models/ItemsModel.dart';
import 'package:shared_preferences/shared_preferences.dart';

class BusinessLogic {

  List fruitslist = [];
  List vegetableslist = [];
  List  userdatalist=[];
  String username="";
  String useremail="";
  String userphone="";
  String useraddress="";
  String userpassword="";
  String imageurl="";
  int orderhistorylistlength=0;
  var orderhistorylist=[];

   void SaveUserDataToHiveDataBase(UserRegsitrationModel userregistrationmodel) async{
    var box =await Hive.openBox("UserDataBox");
    box.clear();
    box.add(userregistrationmodel);
    print("User Data Model Is : ${userregistrationmodel}");
  }

   Future LoadData(String path) async{
    final fruitsbox = await Hive.box("FruitsItemsBox");
    final vegetablebox = await Hive.box("VegetableItemsBox");
    fruitslist = fruitsbox.toMap().values.toList();
    vegetableslist = vegetablebox.toMap().values.toList();
    print("Initial fruitslist length is ${fruitslist.length} and Initial vegetableslist is ${vegetableslist.length}");
    if(fruitslist.isNotEmpty && vegetableslist.isNotEmpty){
      return;
    }

   try{
     final  response =await rootBundle.loadString(path);
     var data =await jsonDecode(response);
     for(Map<String,dynamic> i in data){
           ItemsModel im = new ItemsModel(
             productname:i['productname'].toString(),
             productimage: i['productimage'].toString(),
             productprice: i['productprice'].toString(),
             productdescription: i['productdescription'].toString(),
           );
           if(path=="Assets/Json/Fruits.json"){
             fruitslist.add([im.productname,im.productimage,im.productprice,im.productdescription]);
             fruitsbox.add([im.productname,im.productimage,im.productprice,im.productdescription]);
             print("FruitsList LENGTH IS ${fruitslist.length}  And Items Are ${fruitslist}");
           }else{
             vegetableslist.add([im.productname,im.productimage,im.productprice,im.productdescription]);
             vegetablebox.add([im.productname,im.productimage,im.productprice,im.productdescription]);
             print("VegetablesList LENGTH IS ${vegetableslist.length}  And Items Are ${vegetableslist}");
           }
     }
     // var box =await Hive.openBox("ItemsBox");
   }catch(e){
     print("EXCEPTION CAUGHT :${e.toString()}");
   }

    fruitslist = fruitsbox.toMap().values.toList();
    vegetableslist = vegetablebox.toMap().values.toList();
    print("Final fruitslist length is ${fruitslist.length} and Final  vegetableslist is ${vegetableslist.length}");
  }

  Future<String> GetUserName() async {
    var box = await Hive.box("UserDataBox");
    print(box);
    List temp = box.toMap().values.toList();
    if(temp.isNotEmpty){
      username = temp[0].username;
    }else{
      username="Null";
    }
    print("UserName Is ${username}");
    return username;
  }


  GetUserNameFromSP() async{
     SharedPreferences sp = await SharedPreferences.getInstance();
     return sp.get("UserName");
  }
  Future GetUserData() async {
    var box = await Hive.box("UserDataBox");
    userdatalist =await box.toMap().values.toList();
    print("User Registration Model Is ${userdatalist[0]}");
    if(userdatalist.length==1){
      print("USER DATA LIST FILLED");
    }
    username=userdatalist[0].username;
    useremail=userdatalist[0].useremail;
    userphone=userdatalist[0].userphone;
    useraddress=userdatalist[0].useraddress;
    userpassword=userdatalist[0].userpassword;

    print("Username Before Adding To SharedPreferences Is ${username}");
    final SharedPreferences sp = await SharedPreferences.getInstance();
    sp.setString("UserName", username);
    return userdatalist;
    // if(userdatalist.isEmpty){
    //   UserRegsitrationModel um = new UserRegsitrationModel(
    //       username: "null",
    //       useremail: "null",
    //       userphone: "null",
    //       useraddress: "null",
    //       userpassword: "null");
    //   userdatalist.add(um);
    // }
  }

  SaveOrderHistory(String date,double totalamount,double discount,double payable,List itemslist) async{
    var box =await Hive.openBox("OrdersHistoryBox");
    orderhistorylist = box.toMap().values.toList();
    // box.clear();
    // orderhistorylist.clear();
    print("Old Order History List Is ${orderhistorylist}");
    orderhistorylist.add([date,totalamount,discount,payable,itemslist]);
    box.add([date,totalamount,discount,payable,itemslist]);
    // box.clear();
    // orderhistorylist.clear();
    print("Newly Formed List Is ${box.toMap().values.toList()}");
  }


   GetOrderHistoryLength() async{
    var box =await Hive.openBox("OrdersHistoryBox");
    orderhistorylistlength =  box.toMap().values.toList().length;
    print("Order History List Length Is ${orderhistorylistlength}");
  }

  GetOrderHistoryList() async{
    var box =await Hive.openBox("OrdersHistoryBox");
    orderhistorylist =  box.toMap().values.toList();
    print("Order History List  Is ${orderhistorylist}");
  }

  ClearCartItems()async{
    var mybox =await Hive.openBox("CartItemsBox");
    var cartitemslist = mybox.toMap().values.toList();
    mybox.clear();
    cartitemslist.clear();
    print("Cart Items Are Cleared");
  }

}